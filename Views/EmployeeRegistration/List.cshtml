@model IEnumerable<KiddieParadies.Core.Models.Employee>

@{
    ViewData["title"] = "الموظفين";
}

@section styles
{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/dataTables.bootstrap5.min.css">
    <style>
        section {
            margin-bottom: 15px;
            padding: 1%;
        }

        body section:first-of-type {
            padding: 0px !important;
        }

        .fa-trash {
            color: red;
        }

        .fa-edit {
            color: #55FF1A;
        }

        .fas {
            font-size: 21px;
            margin-right: 10px;
            cursor: pointer;
        }

        a img {
            height: 35px;
        }

        ::-webkit-scrollbar {
            width: 10px;
            margin-top: 4em;
        }

        ::-webkit-scrollbar-track {
            border-radius: 10px;
            margin-top: 3.5em !important;
        }

        ::-webkit-scrollbar-thumb {
            background-color: #FFFEB0;
            border-radius: 10px;
        }

        .bg-light {
            background-color: #FFFEB0 !important;
        }

        @@media only screen and (max-width: 760px) {
            /* Force table to not be like tables anymore */
            table,
            thead,
            tbody,
            th,
            td,
            tr {
                display: block;
            }
                /* Hide table headers (but not display: none;, for accessibility) */
                thead tr {
                    /*position: absolute;
            top: -9999px;
            left: -9999px;*/
                    display: none;
                }

            tr {
                border: 1px solid #ccc;
            }

            td {
                /* Behave  like a "row" */
                border: none;
                border-bottom: 1px solid #eee;
                position: relative;
                padding-right: 50% !important;
            }

                td:before {
                    /* Now like a table header */
                    position: absolute;
                    /* Top/left values mimic padding */
                    top: 6px;
                    right: 6px;
                    width: 45%;
                    padding-left: 10px;
                    white-space: nowrap;
                }
                /*
        Label the data
        */

                td:nth-of-type(1):before {
                    content: "الاسم";
                }

                td:nth-of-type(2):before {
                    content: "تاريخ الميلاد";
                }

                td:nth-of-type(3):before {
                    content: "الصورة الشخصية";
                }

                td:nth-of-type(4):before {
                    content: "الصفة الوظيفية";
                }

                td:nth-of-type(5):before {
                    content: "الجنس";
                }

                td:nth-of-type(6):before {
                    content: "حالةالبيانات";
                }

                td:nth-of-type(7):before {
                    content: "ملخص عن الخبرة";
                }

                td:nth-of-type(8):before {
                    content: "السيرة الذاتية";
                }

                td:nth-of-type(9):before {
                    content: "إدارة";
                }
        }

        @@media only screen and (min-width: 761px) {
            td:nth-of-type(7) {
                width: 17%;
            }

            td:nth-of-type(9) {
                width: 8%;
            }
        }

        .toast-container {
            top: 55px !important;
        }

        .field-validation-error {
            color: #F00;
        }

        .odd {
            background-color: #F2F0FD;
        }

        td {
            border: 1px solid white !important;
        }

        input {
            direction: rtl !important;
            text-align: right !important;
        }
    </style>
}

@if (Model.Any())
{
    <section class="table-responsive">
        <table id="info" class="table align-middle display">
            <thead>
                <tr>
                    <th scope="col">الاسم</th>
                    <th scope="col">تاريخ الميلاد</th>
                    <th scope="col">الصورة الشخصية</th>
                    <th scope="col">الصفة الوظيفية</th>
                    <th scope="col">الجنس</th>
                    <th scope="col">حالة البيانات</th>
                    <th scope="col">ملخص عن الخبرة</th>
                    <th scope="col">السرة الذاتية</th>
                    <th scope="col">إدارة</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in Model)
                {
                    <tr id="employee_@employee.Id">
                        <td>@string.Join(" ", employee.FirstName, employee.LastName)</td>
                        <td>@employee.BirthDate.ToString("yyyy-MM-dd")</td>
                        <td><img style="height: 130px;" alt="@employee.FirstName @employee.LastName" src="@string.Concat("/images/employees/", employee.ImageName)" /></td>
                        <td>@employee.User.UserRoles.FirstOrDefault()?.Role.Name</td>
                        @if (employee.IsMale)
                        {
                            <td>ذكر</td>
                        }
                        else
                        {
                            <td>أنثى</td>
                        }
                        @if (employee.IsValid)
                        {
                            <td>مؤكدة</td>
                        }
                        else
                        {
                            <td>
                                غير مؤكدة
                                <a href="#" class="validateProfile" data-id="@employee.Id" style="text-decoration: none;"> تأكيد؟</a>
                            </td>
                        }
                        <td>@employee.ExperienceSummary</td>
                        <td><a href="@string.Concat("/employees/resumes/", employee.ResumeName)" target="_blank" style="text-decoration: none">تحميل</a></td>
                        <td>
                            <a href="/registerEmployee/edit/@employee.Id" class="edit-btn" target="_blank"><i class="fas fa-edit"></i></a>
                            <a href="#" data-id="@employee.Id" class="remove-btn"><i class="fas fa-trash"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </section>

    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">حذف موظف</h5>
                    <button type="button" class="btn-close clear-data" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="DeleteEmployee" method="POST">
                    <div class="modal-body">
                        <div class="mb-3">
                            <p>هل أنت متأكد من أنك تريد حذف الموظف?</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">نعم</button>
                        <button type="button" class="btn btn-secondary clear-data" data-bs-dismiss="modal">لا</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section scripts
{
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.4/js/dataTables.bootstrap5.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            var infoTable = $('#info').DataTable({
                "columnDefs": [
                    { "type": "date-dd-MM-yyyy", targets: 1 }
                ],
                "language": {
                    "url": "https://cdn.datatables.net/plug-ins/1.11.4/i18n/ar.json"
                }
            });

            // sort date
            (function () {

                var customDateDDMMMYYYYToOrd = function (date) {
                    "use strict"; //let's avoid tom-foolery in this function
                    // Convert to a number YYYYMMDD which we can use to order
                    var dateParts = date.split(/-/);
                    return (dateParts[2] * 10000) +
                        ($.inArray(dateParts[1].toUpperCase(),
                            ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"]) *
                            100) +
                        (dateParts[0] * 1);
                };

                // This will help DataTables magic detect the "dd-MMM-yyyy" format; Unshift
                // so that it's the first data type (so it takes priority over existing)
                jQuery.fn.dataTableExt.aTypes.unshift(
                    function (sData) {
                        "use strict"; //let's avoid tom-foolery in this function
                        if (/^([0-2]?\d|3[0-1])-(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)-\d{4}/i.test(sData)) {
                            return 'date-dd-mmm-yyyy';
                        }
                        return null;
                    }
                );

                // define the sorts
                jQuery.fn.dataTableExt.oSort['date-dd-mmm-yyyy-asc'] = function (a, b) {
                    "use strict"; //let's avoid tom-foolery in this function
                    var ordA = customDateDDMMMYYYYToOrd(a),
                        ordB = customDateDDMMMYYYYToOrd(b);
                    return (ordA < ordB) ? -1 : ((ordA > ordB) ? 1 : 0);
                };

                jQuery.fn.dataTableExt.oSort['date-dd-mmm-yyyy-desc'] = function (a, b) {
                    "use strict"; //let's avoid tom-foolery in this function
                    var ordA = customDateDDMMMYYYYToOrd(a),
                        ordB = customDateDDMMMYYYYToOrd(b);
                    return (ordA < ordB) ? 1 : ((ordA > ordB) ? -1 : 0);
                };

            })();
            // end sort date
            var employeeId = null;

            $("#info").on("click",
                "a.remove-btn",
                function (e) {
                    e.preventDefault();
                    employeeId = $(this).attr('data-id');
                    $('#deleteModal').modal('toggle');
                });

            $('#DeleteEmployee').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    async: false,
                    url: '/api/employee/delete/' + employeeId,
                    method: 'DELETE',
                    statusCode: {
                        404: function (response) {
                            $('#deleteModal').modal('toggle');
                            $("#notification").text("الموظف غير موجود.");
                            $('.toast').toast('show');
                            employeeId = null;
                        },
                        500: function (response) {
                            $('#deleteModal').modal('toggle');
                            $("#notification").text("يوجد خطأ بالمخدم، يرجى المحاولة لاحقاً");
                            $('.toast').toast('show');
                            employeeId = null;
                        },
                        200: function () {
                            infoTable.row("#employee_" + employeeId).remove().draw();
                            $('#deleteModal').modal('toggle');
                            $("#notification").text("تم حذف الموظف بنجاح.");
                            $('.toast').toast('show');
                            employeeId = null;
                        }
                    }
                });
            });


            $("#info").on("click",
                "a.validateProfile",
                function (e) {
                    e.preventDefault();
                    employeeId = $(this).attr('data-id');
                    $.ajax({
                        async: false,
                        url: '/api/employee/validateProfile/' + employeeId,
                        method: 'put',
                        statusCode: {
                            404: function (response) {
                                $("#notification").text("الموظف غير موجود.");
                                $('.toast').toast('show');
                                employeeId = null;
                            },
                            500: function (response) {
                                $("#notification").text("يوجد خطأ بالمخدم، يرجى المحاولة لاحقاً");
                                $('.toast').toast('show');
                                employeeId = null;
                            },
                            200: function () {
                                $("#employee_" + employeeId).find("td").eq(5).text("مؤكدة");
                                $("#notification").text("تم تأكيد بيانات الموظف بنجاح.");
                                $('.toast').toast('show');
                                employeeId = null;
                            }
                        }
                    });
                });
        });
    </script>
}