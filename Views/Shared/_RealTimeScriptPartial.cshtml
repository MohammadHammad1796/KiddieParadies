@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using KiddieParadies.Core.Models
@inject SignInManager<ApplicationUser> _signInManager

@if (_signInManager.IsSignedIn(User) && User.Claims.Any(c => c.Type == ClaimTypes.Role))
{
    <input type="hidden" id="signalRConnectionId" />
    <script src="/lib/signalr/signalr.js"></script>
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>*@
    <script>
        /*$('.chat-main').css("display", "none");
        $('.chat-content').css("display", "none");*/
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/corejs-typeahead/1.3.1/typeahead.bundle.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"></script>

    <script>

        function ToDisplayRealTimeDateTime(dateTime) {
            if (dateTime.includes("T")) {
                dateTime = dateTime.split('T');
                var date = dateTime[0];
                var time = dateTime[1].split(":");
                if (time[0] == "00") {
                    time = "12:" + time[1] + " ص";
                }
                else if (time[0] == "12") {
                    time = "12:" + time[1] + " م";
                }
                else if (parseInt(time[0]) > 12) {
                    if ((parseInt(time[0]) % 12) > 9)
                        time = (parseInt(time[0]) % 12) + ":" + time[1] + " م";
                    else
                        time = "0" + (parseInt(time[0]) % 12) + ":" + time[1] + " م";
                }
                else if (parseInt(time[0]) < 12) {
                    time = time[0] + ":" + time[1] + " ص";
                }
                return date + " " + time;
            }
            return dateTime;
        }

        var receiverId = null, userId = "@User.Claims.First(u => u.Type == ClaimTypes.NameIdentifier).Value";

        $.ajax({
            async: false,
            type: "GET",
            url: "/api/chat/getUsers",
            statusCode: {
                200: function(users) {
                    let chatIndexes = [];
                    for (let user of users) {
                        $.ajax({
                            async: false,
                            type: "GET",
                            url: "/api/chat/getChat/" + user.id,
                            statusCode: {
                                200: function (messages) {
                                    if (messages.length > 0) {
                                        chatIndexes.push(messages[0].id);
                                        var chatSummary = '<div class="chatSummary" style="cursor: pointer; height: 50px; margin-top: 5px;" data-receiverId="' + user.id;
                                        chatSummary += '" data-receiverName="' + user.name + '" data-receiverImagePath="' + user.imagePath;
                                        chatSummary += '" title="' + ToDisplayRealTimeDateTime(messages[0].time);
                                        chatSummary += '"><img src=' + user.imagePath + ' style="width: 15%; float: right; height: 100%; margin-right: 5px; border-radius: 100%;" />';
                                        chatSummary += '<div style="height: 100%; width: 80%; float: left;">';
                                        chatSummary += '<span>' + user.name + '</span><div>';
                                        if (messages[0].content.length <= 20)
                                            chatSummary += messages[0].content;
                                        else
                                            chatSummary += messages[0].content.substring(0, 18) + '...';
                                        chatSummary += '</div></div></div><hr />';
                                        $("#messages").append(chatSummary);
                                    }
                                }
                            }
                        });
                    }
                    let indexChatPair = [];
                    $(chatIndexes).each(function(index) {
                        indexChatPair.push({ "messageId": chatIndexes[index],
                            "element": document.getElementsByClassName("chatSummary")[index].outerHTML });
                    });
                    indexChatPair.sort(function(a, b) {
                        return a.messageId - b.messageId;
                    });
                    indexChatPair.reverse();
                    console.log(indexChatPair);
                    $("#messages hr, .chatSummary").remove();
                    $("#messages").append("<hr/>");
                    for (let result of indexChatPair) {
                        $("#messages").append(result.element);
                        $("#messages").append("<hr/>");
                    }
                }
            }
        });

        $.ajax({
            async: false,
            type: "GET",
            url: "/api/notification/getAll",
            statusCode: {
                200: function (notifications) {
                    if (notifications.length > 0) {
                        for (let notification of notifications) {
                            var notificationSummary = '<a href="' + notification.url + '" class="notificationSummary" data-isRead="' + notification.isRead + '" data-id="' + notification.id + '" style="text-decoration: none; color: black;"><div';
                            notificationSummary += '" title="' + ToDisplayRealTimeDateTime(notification.time);
                            notificationSummary += '">';
                            notificationSummary += '<div style="width: 95%; margin: 2.5%;';
                            if (notification.isRead == false)
                                notificationSummary += ' background-color: #EEE;';
                            notificationSummary += '"><span>' + notification.title;
                            if (notification.isRead == false)
                                notificationSummary += " (غير مقروء)";
                            notificationSummary += '</span><div style="text-align: left;">';
                            notificationSummary += ToDisplayRealTimeDateTime(notification.time);
                            notificationSummary += '</div></div></div></a><hr />';
                            $("#notifications").append(notificationSummary);
                        }
                    }
                }
            }
        });

        $('#messageInput').keypress(function (e) {
            var key = e.which;
            if(key == 13)  // the enter key code
            {
                $(".fa-paper-plane").click();
            }
        });

        $("#notifications").on("click", "a.notificationSummary", function(e) {
            e.preventDefault();
            if ($(this).attr("data-isRead") == "true")
                window.location.href = $(this).attr("href");
            else {
                let navigationUrl = $(this).attr("href");
                $.ajax({
                    async: false,
                    type: "GET",
                    url: `/api/notification/markAsRead/${$(this).attr("data-id")}`,
                    statusCode: {
                        404: function () {},
                        500: function () {},
                        204: function () {
                            window.location.href = navigationUrl;
                        }
                    }
                });

            }
        });

        $(".fa-paper-plane").click(function (e) {
            e.preventDefault();
            if (receiverId != null && userId != null && $("#messageInput").val().length > 0) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json",
                    url: "/api/chat/send",
                    data: JSON.stringify({
                        receiverId: receiverId,
                        senderId: userId,
                        content: $("#messageInput").val()
                    }),
                    statusCode: {
                        200: function (message) {
                            $("#messageInput").val("");
                            let lis = '<li class="pl-2 pr-2 bg-primary rounded text-white text-center send-msg mb-1"';
                            lis += ' style="text-align: right !important;" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                            lis += message.content;
                            lis += '</li>';
                            $(".chat-content").find("div").eq(0).find("ul").eq(0).append(lis);
                            $('.chat-content li:last')[0].scrollIntoView({ behavior: 'smooth' });
                            $("#messageInput").focus();

                            $(".chatSummary").each(function(index) {
                                if ($(this).attr("data-receiverId") == receiverId) {
                                    $(this).attr("title", ToDisplayRealTimeDateTime(message.time));
                                    if (message.content.length <= 18)
                                        $(this).find("div").eq(0).find("div").eq(0).text(message.content);
                                    else
                                        $(this).find("div").eq(0).find("div").eq(0).text(message.content.substring(0, 18) + "...");
                                    //let summary = $(this);
                                    //$(this).next("hr").remove();
                                    if (index != 0) {
                                        $("#messages .chatSummary:first").before($(this));
                                        $(this).after("<hr/>");
                                        $("#messages hr:last").remove();
                                    }
                                }
                            });
                        },
                        400: function (){},
                        500: function (){}
                    }
                });
            }
        });

    </script>


    <script>
        $('.hide-chat-box').click(function () {
            $('.chat-content').slideToggle();
        });

        $('.close-chat-box').click(function () {
            $('.chat-main').css("display", "none");
            $('.chat-content').css("display", "block");
        });

        $(document).ready(function () {
            $('.chat-main').css("display", "none");
            $('.chat-content').css("display", "block");

            $("#messages").on("click", ".chatSummary", function () {

                $("#messages").hide();
                $("#notifications").hide();

                $("#receiverName").text($(this).attr("data-receiverName"));
                receiverId = $(this).attr("data-receiverId");
                $("#receiverName").attr("data-receiverId", receiverId);
                let imagePath = $(this).find("img").eq(0).attr("src");

                $.ajax({
                    async: false,
                    type: "GET",
                    url: "/api/chat/getChat/" + $("#receiverName").attr("data-receiverId"),
                    statusCode: {
                        200: function (messages) {
                            var lis = "";
                            if (messages.length > 0)
                                messages.reverse();

                            for (let message of messages) {
                                if (message.senderId == userId) {
                                    lis += '<li class="pl-2 pr-2 bg-primary rounded text-white text-center send-msg mb-1"';
                                    lis += ' style="text-align: right !important;" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                                    lis += message.content;
                                    lis += '</li>';
                                } else {
                                    lis += '<li class="p-1 rounded mb-1"><div class="receive-msg" style="width:100%" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                                    lis += '<img src="' + imagePath + '">';
                                    lis += '<div class="receive-msg-desc text-center mt-1 ml-1 pl-2 pr-2" style="float: left; max-width: 84%">';
                                    lis += '<p class="pl-2 pr-2 rounded" style="text-align: right !important;">' + message.content + '</p>';
                                    lis += '</div></div></li>';
                                }
                            }
                            $(".chat-content").find("div").eq(0).find("ul").eq(0).html(lis);
                            $('.chat-main').css("display", "block");
                            $('.chat-content').css("display", "block");
                            $('.chat-content li:last')[0].scrollIntoView({ behavior: 'smooth' });
                            $("#messageInput").focus();
                        }
                    }
                });
                $('.chat-content li:last')[0].scrollIntoView({ behavior: 'smooth' });
            });
        });
    </script>

    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/NotificationUserHub?userId=" + userId).build();
        connection.on("sendMessage", (message) => {
            //console.log(message);

            var userName, userImage;
            receiverId = message.senderId;
            $.ajax({
                async: false,
                type: "GET",
                url: "/api/chat/getUserInfo/" + receiverId,
                statusCode: {
                    200: function (user) {
                        userName = user.name;
                        userImage = user.imagePath;
                        //console.log(user);
                    }
                }
            });

            $.ajax({
                async: false,
                type: "GET",
                url: "/api/chat/getChat/" + receiverId,
                statusCode: {
                    200: function (messages) {
                        var lis = "";
                        if (messages.length > 0)
                            messages.reverse();
                        var flag = null;
                        for (let message of messages) {
                            flag = message;
                            if (message.senderId == userId) {
                                lis += '<li class="pl-2 pr-2 bg-primary rounded text-white text-center send-msg mb-1"';
                                lis += ' style="text-align: right !important;" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                                lis += message.content;
                                lis += '</li>';
                            } else {
                                lis += '<li class="p-1 rounded mb-1"><div class="receive-msg" style="width: 100%;" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                                lis += '<img src="' + userImage + '">';
                                lis += '<div class="receive-msg-desc text-center mt-1 ml-1 pl-2 pr-2" style="float: left; max-width: 85%;">';
                                lis += '<p class="pl-2 pr-2 rounded" style="text-align: right !important;">' + message.content + '</p>';
                                lis += '</div></div></li>';
                            }
                        }
                        $(".chat-content").find("div").eq(0).find("ul").eq(0).html(lis);
                        $("#receiverName").text(userName);
                        $(".chat-content").attr("data-receiverId", receiverId);
                        $('.chat-main').css("display", "block");
                        $('.chat-content').css("display", "block");
                        $('.chat-content li:last')[0].scrollIntoView({ behavior: 'smooth' });
                        $("#messageInput").focus();

                        $(".chatSummary").each(function (index) {
                            if ($(this).attr("data-receiverId") == receiverId) {
                                $(this).attr("title", ToDisplayRealTimeDateTime(flag.time));
                                if (flag.content.length <= 18)
                                    $(this).find("div").eq(0).find("div").eq(0).text(flag.content);
                                else
                                    $(this).find("div").eq(0).find("div").eq(0).text(flag.content.substring(0, 18) + "...");
                                //let summary = $(this);
                                //$(this).next("hr").remove();
                                if (index != 0) {
                                    $("#messages .chatSummary:first").before($(this));
                                    $(this).after("<hr/>");
                                    $("#messages hr:last").remove();
                                }
                            }
                        });
                    }
                }
            });
            $('.chat-content li:last')[0].scrollIntoView({ behavior: 'smooth' });
            const audio = new Audio("/messageNotification.mp3");
            audio.play();
        });
        connection.start().catch(function (err) {
            return console.error(err.toString());
        }).then(function () {
            connection.invoke('GetConnectionId').then(function (connectionId) {
                $("#signalRConnectionId").val(connectionId);
            });
        });
    </script>

    <script>
        var users = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                url: '/api/chat/getUsers/%QUERY',
                wildcard: '%QUERY'
            }
        });

        $('#messageSearchInput').typeahead({
            minLength: 0,
            highlight: true
        }, {
            name: 'user',
            templates: {
                suggestion: Handlebars.compile('<div class="chatSummary" style="cursor: pointer; height: 50px; margin-top: 5px;"> <img src={{imagePath}} style="width: 15%; float: right; height: 100%; margin-right: 5px; border-radius: 100%;" /> <div style="height: 100%; width: 80%; float: left;"><span>{{name}}</span><div></div></div></div><hr />')
            },
            limit: 500,
            source: users
        }).on("typeahead:select", function (e, user) {
            console.log(user);

            var userName, userImage;
            //console.log(receiverId);
            receiverId = user.id;
            //console.log(user);
            //console.log(receiverId);

            if (user.id != null && user.id != undefined && user.id != "") {
                $.ajax({
                    async: false,
                    type: "GET",
                    url: "/api/chat/getUserInfo/" + user.id,
                    statusCode: {
                        200: function (userInfo) {
                            userName = userInfo.name;
                            userImage = userInfo.imagePath;
                            //console.log(userInfo);
                        }
                    }
                });

                $.ajax({
                    async: false,
                    type: "GET",
                    url: "/api/chat/getChat/" + user.id,
                    statusCode: {
                        200: function (messages) {
                            var lis = "";
                            if (messages.length > 0)
                                messages.reverse();

                            for (let message of messages) {
                                if (message.senderId == userId) {
                                    lis += '<li class="pl-2 pr-2 bg-primary rounded text-white text-center send-msg mb-1"';
                                    lis += ' style="text-align: right !important;" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                                    lis += message.content;
                                    lis += '</li>';
                                } else {
                                    lis += '<li class="p-1 rounded mb-1"><div class="receive-msg" style="width: 100%;" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                                    lis += '<img src="' + userImage + '">';
                                    lis += '<div class="receive-msg-desc text-center mt-1 ml-1 pl-2 pr-2" style="float: left; max-width: 85%;">';
                                    lis += '<p class="pl-2 pr-2 rounded" style="text-align: right !important;">' + message.content + '</p>';
                                    lis += '</div></div></li>';
                                }
                            }
                            $(".chat-content").find("div").eq(0).find("ul").eq(0).html(lis);
                            $("#receiverName").text(userName);
                            $(".chat-content").attr("data-receiverId", user.id);
                            $('.chat-main').css("display", "block");
                            $('.chat-content').css("display", "block");
                            if ($('.chat-content li:last').length)
                                $('.chat-content li:last')[0].scrollIntoView({ behavior: 'smooth' });
                            $("#messageInput").focus();

                            $("#messages").hide();
                            $("#messageSearchInput").val("");
                            $('.typeahead').typeahead('val', '');
                            //console.log(user);
                        },
                        404: function () {}
                    }
                });
            }
        });

                    // disable typeahead element that invalidate form
                    $(".twitter-typeahead > input[type='text']:eq(0)").remove();
        $("#messageSearchInput").css("background", "white");
    </script>
}
else if (_signInManager.IsSignedIn(User))
{
    <input type="hidden" id="signalRConnectionId" />
    <script src="/lib/signalr/signalr.js"></script>

    <script>

        function ToDisplayRealTimeDateTime(dateTime) {
            if (dateTime.includes("T")) {
                dateTime = dateTime.split('T');
                var date = dateTime[0];
                var time = dateTime[1].split(":");
                if (time[0] == "00") {
                    time = "12:" + time[1] + " ص";
                }
                else if (time[0] == "12") {
                    time = "12:" + time[1] + " م";
                }
                else if (parseInt(time[0]) > 12) {
                    if ((parseInt(time[0]) % 12) > 9)
                        time = (parseInt(time[0]) % 12) + ":" + time[1] + " م";
                    else
                        time = "0" + (parseInt(time[0]) % 12) + ":" + time[1] + " م";
                }
                else if (parseInt(time[0]) < 12) {
                    time = time[0] + ":" + time[1] + " ص";
                }
                return date + " " + time;
            }
            return dateTime;
        }

        var userId = "@User.Claims.First(u => u.Type == ClaimTypes.NameIdentifier).Value";

        $.ajax({
            async: false,
            type: "GET",
            url: "/api/notification/getAll",
            statusCode: {
                200: function (notifications) {
                    if (notifications.length > 0) {
                        for (let notification of notifications) {
                            var notificationSummary = '<a href="' + notification.url + '" class="notificationSummary" data-isRead="' + notification.isRead + '" data-id="' + notification.id + '" style="text-decoration: none; color: black;"><div';
                            notificationSummary += '" title="' + ToDisplayRealTimeDateTime(notification.time);
                            notificationSummary += '">';
                            notificationSummary += '<div style="width: 95%; margin: 2.5%;';
                            if (notification.isRead == false)
                                notificationSummary += ' background-color: #EEE;';
                            notificationSummary += '"><span>' + notification.title;
                            if (notification.isRead == false)
                                notificationSummary += " (غير مقروء)";
                            notificationSummary += '</span><div style="text-align: left;">';
                            notificationSummary += ToDisplayRealTimeDateTime(notification.time);
                            notificationSummary += '</div></div></div></a><hr />';
                            $("#notifications").append(notificationSummary);
                        }
                    }
                }
            }
        });

        $("#notifications").on("click", "a.notificationSummary", function(e) {
            e.preventDefault();
            if ($(this).attr("data-isRead") == "true")
                window.location.href = $(this).attr("href");
            else {
                let navigationUrl = $(this).attr("href");
                $.ajax({
                    async: false,
                    type: "GET",
                    url: `/api/notification/markAsRead/${$(this).attr("data-id")}`,
                    statusCode: {
                        404: function () {},
                        500: function () {},
                        204: function () {
                            window.location.href = navigationUrl;
                        }
                    }
                });

            }
        });

    </script>

    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/NotificationUserHub?userId=" + userId).build();
                    /*connection.on("sendMessage", (message) => {
//console.log(message);

var userName, userImage;
receiverId = message.senderId;
$.ajax({
async: false,
type: "GET",
url: "/api/chat/getUserInfo/" + receiverId,
statusCode: {
        200: function (user) {
            userName = user.name;
            userImage = user.imagePath;
            //console.log(user);
        }
}
});

$.ajax({
async: false,
type: "GET",
url: "/api/chat/getChat/" + receiverId,
statusCode: {
        200: function (messages) {
            var lis = "";
            if (messages.length > 0)
                messages.reverse();
            var flag = null;
            for (let message of messages) {
                flag = message;
                if (message.senderId == userId) {
                    lis += '<li class="pl-2 pr-2 bg-primary rounded text-white text-center send-msg mb-1"';
                    lis += ' style="text-align: right !important;" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                    lis += message.content;
                    lis += '</li>';
                } else {
                    lis += '<li class="p-1 rounded mb-1"><div class="receive-msg" style="width: 100%;" title="' + ToDisplayRealTimeDateTime(message.time) + '">';
                    lis += '<img src="' + userImage + '">';
                    lis += '<div class="receive-msg-desc text-center mt-1 ml-1 pl-2 pr-2" style="float: left; max-width: 85%;">';
                    lis += '<p class="pl-2 pr-2 rounded" style="text-align: right !important;">' + message.content + '</p>';
                    lis += '</div></div></li>';
                }
            }
            $(".chat-content").find("div").eq(0).find("ul").eq(0).html(lis);
            $("#receiverName").text(userName);
            $(".chat-content").attr("data-receiverId", receiverId);
            $('.chat-main').css("display", "block");
            $('.chat-content').css("display", "block");
            $('.chat-content li:last')[0].scrollIntoView({ behavior: 'smooth' });
            $("#messageInput").focus();

            $(".chatSummary").each(function (index) {
                if ($(this).attr("data-receiverId") == receiverId) {
                    $(this).attr("title", ToDisplayRealTimeDateTime(flag.time));
                    if (flag.content.length <= 18)
                        $(this).find("div").eq(0).find("div").eq(0).text(flag.content);
                    else
                        $(this).find("div").eq(0).find("div").eq(0).text(flag.content.substring(0, 18) + "...");
                    //let summary = $(this);
                    //$(this).next("hr").remove();
                    if (index != 0) {
                        $("#messages .chatSummary:first").before($(this));
                        $(this).after("<hr/>");
                        $("#messages hr:last").remove();
                    }
                }
            });
        }
}
});
$('.chat-content li:last')[0].scrollIntoView({ behavior: 'smooth' });
const audio = new Audio("/messageNotification.mp3");
audio.play();
});
connection.start().catch(function (err) {
return console.error(err.toString());
}).then(function () {
connection.invoke('GetConnectionId').then(function (connectionId) {
$("#signalRConnectionId").val(connectionId);
});
});*/
    </script>
}